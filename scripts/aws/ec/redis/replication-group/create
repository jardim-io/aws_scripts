#!/bin/bash

set -e
set -o pipefail

. .env

. $AWS_SCRIPTS_BASE_DIR/aws/utils

check_aws_cli_installed

set_log_context "[UTILS] [EC]"

info "Creating elasticache replication group."

cmd="aws elasticache create-replication-group"

# Use parameter expansion to get values from environment or default
replication_group_id="${AWS_REPLICATION_GROUP_ID:-}"
replication_group_description="${AWS_REPLICATION_GROUP_DESCRIPTION:-}"
cache_node_type="${AWS_REPLICATION_CACHE_NODE_TYPE:-}"
engine="${AWS_REPLICATION_ENGINE:-}"
cache_parameter_group_name="${AWS_REPLICATION_CACHE_PARAMETER_GROUP_NAME:-}"
num_cache_clusters="${AWS_REPLICATION_CACHE_NUMBER_OF_CLUSTERS:-}"
cache_subnet_group_name="${CACHE_SUBNET_GROUP_NAME:-}"
security_group_ids="${SECURITY_GROUP_IDS:-}"

[[ -n "$replication_group_id" ]] && cmd+=" --replication-group-id \"$replication_group_id\""
[[ -n "$replication_group_description" ]] && cmd+=" --replication-group-description \"$replication_group_description\""
[[ -n "$cache_node_type" ]] && cmd+=" --cache-node-type \"$cache_node_type\""
[[ -n "$engine" ]] && cmd+=" --engine \"$engine\""
[[ -n "$cache_parameter_group_name" ]] && cmd+=" --cache-parameter-group-name \"$cache_parameter_group_name\""
[[ -n "$num_cache_clusters" ]] && cmd+=" --num-cache-clusters \"$num_cache_clusters\""
[[ -n "$cache_subnet_group_name" ]] && cmd+=" --cache-subnet-group-name \"$cache_subnet_group_name\""
[[ -n "$security_group_ids" ]] && cmd+=" --security-group-ids \"$security_group_ids\""

cmd+=" --no-cli-pager"

eval $cmd

info "Completed creating elasticache replication group."
