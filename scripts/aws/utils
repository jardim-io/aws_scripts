#!/bin/bash

function check_aws_cli_installed {
  set_log_context "[UTILS]"

  info "Checking AWS CLI is installed."

  if ! command -v aws &> /dev/null; then
    error "AWS CLI is not installed. Please install it first. https://aws.amazon.com/cli/"
    exit 1
  fi

  info "Confirmed AWS CLI is installed."
}

function check_helm_installed {
  set_log_context "[UTILS]"

  info "Checking Helm is installed."

  if ! command -v helm &> /dev/null; then
    error "hl could not be found. Please install it first. https://helm.sh/"
    exit 1
  fi

  info "Confirmed Helm is installed."
}

function check_kubectl_installed {
  set_log_context "[UTILS]"

  info "Checking kubectl is installed."

  if ! command -v helm &> /dev/null; then
    error "kubectl could not be found. Please install it first. https://kubernetes.io/docs/reference/kubectl/"
    exit 1
  fi

  info "Confirmed kubectl is installed."
}

function check_eksctl_installed {
  set_log_context "[UTILS]"

  info "Checking eksctl is installed."

  if ! command -v eksctl &> /dev/null; then
    error "eksctl could not be found. Please install it first. https://eksctl.io/"
    exit 1
  fi

  info "Confirmed eksctl is installed."
}

function check_docker_installed {
  set_log_context "[UTILS]"

  info "Checking docker is installed."

  if ! command -v docker &> /dev/null; then
    error "Docker could not be found. Please install it first. https://www.docker.com/"
    exit 1
  fi

  info "Confirmed docker is installed."
}

LOG_CONTEXT=""

log() {
  local level="$1"
  shift

  local datetime=$(date +"%Y-%m-%d %H:%M:%S")
  local message="$@"

  echo "[$datetime] [$level] $LOG_CONTEXT $message" >&2
}

info() {
  log "INFO" "$@"
}

error() {
  log "ERROR" "$@"
}

set_log_context() {
  LOG_CONTEXT="$@"
}
